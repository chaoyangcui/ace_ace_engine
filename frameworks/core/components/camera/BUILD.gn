# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/ace/ace_engine/frameworks/core/components/components.gni")
config("standard_camera_config") {
  cflags_cc = [ "-Wno-user-defined-warnings" ]

  include_dirs = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include/",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/display/interfaces/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/graphic/standard/frameworks/surface/include",
    "//foundation/graphic/standard/interfaces/kits/surface",
    "//foundation/graphic/standard/window_manager/include",
    "//foundation/multimedia/media_standard/interfaces/kits/native/include",
    "//foundation/multimedia/media_standard/interfaces/innerkits/native/media/include",
    "//utils/native/base/include",
    "//drivers/peripheral/camera/hal/hdi_impl/include/camera_device",
    "//drivers/peripheral/camera/hal/hdi_impl/include/camera_host",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/display/interfaces/include",
    "//foundation/graphic/standard/frameworks/surface/include",
    "//foundation/graphic/standard/interfaces/kits/surface",
    "//foundation/graphic/standard/window_manager/include",
    "//drivers/peripheral/camera/hal/include",
    "//foundation/multimedia/camera_standard/interfaces/innerkits/native/camera/include",
    "//drivers/peripheral/camera/interfaces/include/callback/device/",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/osal/include",
    "//drivers/peripheral/camera/hal/utils/metadata/include",
    "//drivers/peripheral/camera/hal/utils/metadata/include/system",
    "//foundation/graphic/standard/frameworks/surface/include",
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/camera/hal/include",
    "//drivers/peripheral/camera/interfaces/include/server",
    "//drivers/framework/include/utils/",
    "//drivers/adapter/uhdf2/osal/include/",
    "//drivers/adapter/uhdf2/include/hdi/",
    "//drivers/peripheral/camera/interfaces/include/",
    "//drivers/peripheral/camera/interfaces/include/server/",
    "//drivers/peripheral/camera/interfaces/include/callback/device/",
    "//drivers/peripheral/camera/interfaces/include/callback/host/",
    "//drivers/peripheral/camera/interfaces/include/callback/operator/",
    "//drivers/peripheral/camera/hal/hdi_impl/include/camera_host/",
    "//drivers/peripheral/camera/hal/hdi_impl/include/stream_operator/",
    "//drivers/peripheral/camera/hal/device_manager/include/",
    "//drivers/peripheral/camera/hal/utils/metadata/include/",
    "//drivers/peripheral/camera/hal/hdi_impl/include/camera_device/",
    "//drivers/peripheral/camera/hal/hdi_impl/include/",
    "//drivers/peripheral/camera/hal/hdi_impl/include/offline_stream_operator/",
    "//drivers/peripheral/camera/hal/include/",
    "//drivers/peripheral/camera/hal/pipeline_core/include/",
    "//drivers/peripheral/camera/hal/pipeline_core/utils/",
    "//drivers/peripheral/camera/hal/pipeline_core/pipeline_impl/include/",
    "//drivers/peripheral/camera/hal/pipeline_core/host_stream/include/",
    "//drivers/peripheral/camera/hal/pipeline_core/ipp/include/",
    "//drivers/peripheral/camera/hal/utils/metadata/include/system",
    "//foundation/multimedia/camera_standard/services/camera_service/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/server/include",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/display/interfaces/include",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata/include"
  ]
}

build_component("camera") {
  sources = [
    "camera_component.cpp",
    "camera_element.cpp",
  ]

  if (is_standard_system) {
    configs = [ ":standard_camera_config" ]

    sources += [ "camera.cpp" ]

    deps = [
      "//foundation/graphic/standard:libwms_client",
      "//utils/native/base:utils",
      "//foundation/graphic/standard/frameworks/surface:surface",
      "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/camera:camera_framework"
    ]

    external_deps = [
      "ipc:ipc_core",
      "multimedia_media_standard:media_client",
    ]
  }
}
